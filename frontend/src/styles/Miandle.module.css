.container {
  max-width: var(--max-width);
  margin: 0 auto;
  padding: 2rem;
  margin-top: 100px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.header h1 {
  margin: 0;
  color: var(--primary-color);
  font-size: 2rem;
}

.exportButton {
  background-color: var(--secondary-color);
  color: var(--light-color);
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 1rem;
  transition: var(--transition);
}

.exportButton:hover {
  background-color: var(--secondary-dark);
}

.error {
  background-color: #f8d7da;
  color: #721c24;
  padding: 1rem;
  border-radius: var(--border-radius);
  margin-bottom: 1rem;
}

/* Controles de filtrado */
.controls {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.searchContainer {
  position: relative;
  flex-grow: 1;
  min-width: 250px;
}

.searchInput {
  width: 100%;
  padding: 0.75rem 1rem 0.75rem 2.5rem;
  border: 1px solid var(--primary-color);
  border-radius: var(--border-radius);
  font-size: 1rem;
  background-color: #fff;
  color: #000;            
  outline: none;          
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.searchInput:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px var(--primary-dark); 
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary-color);
}

.filterGroup {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.filterGroup label {
  white-space: nowrap;
}

.filterSelect {
  padding: 0.5rem;
  border-radius: var(--border-radius);
  border: 1px solid #ced4da;
  font-size: 1rem;
}

.spinnerContainer {
  display: flex;
  justify-content: center;
  padding: 3rem 0;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: var(--primary-color);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
  margin-top: 1rem;
}

.card {
  background: var(--light-color);
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--box-shadow);
  transition: transform 0.3s, box-shadow 0.3s;
  display: flex;
  flex-direction: column;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
}

.cardImage {
  width: 100%;
  height: 200px;
  object-fit: cover;
  cursor: pointer;
}

.cardBody {
  padding: 1.5rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.cardTitle {
  margin: 0 0 0.5rem 0;
  font-size: 1.3rem;
  color: var(--primary-color);
}

.cardCategory {
  display: inline-block;
  background-color: var(--secondary-color);
  color: var(--light-color);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius);
  font-size: 0.8rem;
  margin-bottom: 0.5rem;
  max-width: 80px;
  text-align: center;
}

.verifiedBadge {
  display: inline-block;
  background-color: #28a745;
  color: var(--light-color);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius);
  font-size: 0.8rem;
  margin-left: 0.5rem;
}

.cardOrigin {
  margin: 0 0 0.5rem 0;
  color: var(--primary-color);
  font-size: 0.9rem;
}

.cardContent {
  margin: 0 0 1rem 0;
  color: var(--text-color);
  font-size: 0.9rem;
  flex-grow: 1;
}

.cardActions {
  display: flex;
  justify-content: flex-end;
  margin-top: auto;
}

.viewButton {
  background-color: transparent;
  color: var(--primary-color);
  border: 1px solid var(--primary-color);
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 0.9rem;
  transition: var(--transition);
}

.viewButton:hover {
  background-color: var(--primary-color);
  color: var(--light-color);
}

/* Modal de detalles */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.detailModal {
  background-color: var(--light-color);
  border-radius: var(--border-radius);
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: var(--box-shadow);
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  border-bottom: 1px solid #eee;
}

.modalHeader h2 {
  margin: 0;
  color: var(--dark-color);
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--text-color);
  transition: var(--transition);
}

.closeButton:hover {
  color: var(--dark-color);
}

.detailImage {
  width: 100%;
  max-height: 400px;
  object-fit: cover;
  border-radius: var(--border-radius);
  margin-bottom: 1rem;
}

.metaInfo {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.metaInfo p {
  margin: 0;
  color: var(--text-color);
}

.categoryBadge {
  background-color: var(--secondary-color);
  color: var(--light-color);
  padding: 0.25rem 0.5rem;
  border-radius: var(--border-radius);
  font-size: 0.9rem;
}

.content {
  line-height: 1.6;
  color: var(--text-color);
}

.content p {
  margin-bottom: 1rem;
}

/* Paginaci√≥n */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 2rem;
  padding: 1rem;
}

.pagination button {
  padding: 0.5rem 1rem;
  border: 1px solid var(--primary-color);
  background-color: transparent;
  color: var(--primary-color);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: var(--transition);
}

.pagination button:hover:not(:disabled) {
  background-color: var(--primary-color);
  color: white;
}

.pagination button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.pagination span {
  color: var(--text-color);
}

/* Responsive */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }
  
  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .controls {
    flex-direction: column;
  }
  
  .filterGroup {
    width: 100%;
  }
  
  .filterSelect {
    width: 100%;
  }
  
  .grid {
    grid-template-columns: 1fr;
  }
}